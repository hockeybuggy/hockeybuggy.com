#!/usr/bin/env python
import sys
import argparse
import datetime
import random
import string
from os import path

outputDirStr = "content/blog"
dateformat = "%Y-%m-%d"
postTemplate = """\
---
title: {}
slug: ""
date: "{}"
tags:
- development
categories:
- misc
---

<!--copy goes here-->

"""


def parseargs():
    parser = argparse.ArgumentParser(description="""
                Create a new post with a suitable yaml header.\
            """)
    parser.add_argument('--title', help="""A title for the post, \
                default='untitled'
            """)
    parser.add_argument('--date', help="""A publish date for the post in the \
                form: yyyy-mm-dd, default=<today>
            """)
    args = parser.parse_args()

    if not args.date:
        today = datetime.datetime.now()
        args.date = today.strftime(dateformat)
    else:
        try:
            date = datetime.datetime.strptime(args.date, dateformat)
        except:
            print "Error. Invalid time format. Must be in the form yyyy-mm-dd"
            sys.exit(-1)
        args.date = date.strftime(dateformat)

    if not args.title:
        args.title = "untitled; a rope of sand"

    return args


def get_random_str(length):
    valid_chars = string.ascii_letters + string.digits
    return ''.join([random.choice(valid_chars) for ch in range(length)])


def main(category, date, title):
    outFilename = "{}-{}_{}.md".format(date, category, get_random_str(8))
    outPath = path.join(outputDirStr, outFilename)
    with open(outPath, "w") as w:
        print "writing to file:", outPath
        w.write(postTemplate.format(title, date, category))


if __name__ == "__main__":
    args = parseargs()
    main('main', args.date, args.title)
